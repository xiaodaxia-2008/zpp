# https://intel.github.io/llvm-docs/clang/ClangFormatStyleOptions.html
---
BasedOnStyle: LLVM
IndentWidth: 4
---
Language: Cpp
InsertBraces: true
BreakBeforeBraces: Linux
AlwaysBreakTemplateDeclarations: true
# extra indentation for public/private access modifier
AccessModifierOffset: -4
# RequiresClausePosition: OwnLine
# AllowShortLoopsOnASingleLine: true
# ColumnLimit: 80
# Cpp11BracedListStyle: true
# KeepEmptyLinesAtTheStartOfBlocks: true
# NamespaceIndentation: None
# SpacesInCStyleCastParentheses: false
# SpacesInContainerLiterals: false
# SpacesInParentheses: false
# Standard: Cpp11
# TabWidth: 4
# UseTab: Never
# IndentPPDirectives: None
# IntegerLiteralSeparator:
#   Binary: 0
#   Decimal: 3
#   Hex: -1
# # 指针的*的挨着哪边
# PointerAlignment: Right
# # 连续的空行保留几行
# MaxEmptyLinesToKeep: 1
# # 是否允许短方法单行
# AllowShortFunctionsOnASingleLine: true
# # 是否允许短if单行 If true, if (a) return; 可以放到同一行
# #注释对齐
# AlignTrailingComments: false
# AllowShortIfStatementsOnASingleLine: true
# AccessModifierOffset: -4
# # 连续赋值时，对齐所有等号
# AlignConsecutiveAssignments: false
# # 连续声明时，对齐所有声明的变量名
# AlignConsecutiveDeclarations: false
# # ConstructorInitializerAllOnOneLineOrOnePerLine: true
# # AllowAllConstructorInitializersOnNextLine: true
# AlignAfterOpenBracket: Align

# #等号两边的空格
# SpaceBeforeAssignmentOperators: true
# # If ``true``, spaces will be inserted after '<' and before '>' in template argument lists
# SpacesInAngles: false
# SortIncludes: CaseSensitive
# IncludeBlocks: Preserve
# # IncludeCategories:
# #   - Regex: '<FiberArt/'
# #     Priority: 2
# #     SortPriority: 2
# #     CaseSensitive: true
# #   - Regex: '<\w+>'
# #     Priority: -10
# #     SortPriority: -10

# # false表示所有形参要么都在同一行，要么都各自一行
# BinPackParameters: true
# # BinPackArguments: false
# # BinPackParameters: false
# # ExperimentalAutoDetectBinPacking: false
# # AllowAllParametersOfDeclarationOnNextLine: false

# # # 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效
# # BraceWrapping:
# #   # class定义后面
# #   AfterClass: true
# #   # 控制语句后面
# #   AfterControlStatement: false
# #   # enum定义后面
# #   AfterEnum: true
# #   # 函数定义后面
# #   AfterFunction: true
# #   # 命名空间定义后面
# #   AfterNamespace: true
# #   # ObjC定义后面
# #   AfterObjCDeclaration: true
# #   # struct定义后面
# #   AfterStruct: true
# #   # union定义后面
# #   AfterUnion: true
# #   # catch之前
# #   BeforeCatch: true
# #   # else之前
# #   BeforeElse: true
# #   # 缩进大括号
# #   IndentBraces: false
# # # 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)
# # BreakBeforeBinaryOperators: NonAssignment
